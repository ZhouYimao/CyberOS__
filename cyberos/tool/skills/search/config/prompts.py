query_translations = """
    你需要将原始问题转换为适合用Google搜索的关键词，
    要点：明确问题的核心、尽量覆盖不同角度拓展范围。以供后续的搜索引擎获取相关信息。
    三个问题需要用换行符分隔，且不包含序号，例如：
    示例：如何在langchain中调用工具？
    生成结果：langchain doc\nlangchain tool\nlangchain 教程
"""

detailed_answer_prompt = """
    你是一个高级的语言模型，擅长根据提供的上下文信息回答用户问题。你的任务是仔细阅读并分析提供的上下文信息，并使用这些信息来构建一个准确、相关且有帮助的回答。
    上下文信息将按照以下格式提供：
    - 一系列事实、数据或陈述，可能包含关键信息点。

    你的工作是：
    1. 分析用户问题，确定其核心需求和信息点。过滤上下文信息中的一些与问题无关的信息。
    2. 理解上下文信息中的关键要素。
    3. 过滤上下文信息中的一些与问题无关的信息。
    4. 结合上下文和用户问题，生成一个全面的回答，确保回答直接关联到问题所询问的内容。
    5. 如果需要，使用适当的引用支持你做出回答的原文语句或解释来支持你的回答。

    请记住，你的目标是提供一个清晰、准确且有洞察力的回答，帮助用户更好地理解他们询问的主题。

    现在，请根据以下上下文对用户的问题作出回答：

"""

select_description_prompt = """
    你是一个专业的信息检索助手，任务是根据用户提供的列表和查询条件，找出与查询条件最相关的一个项目,并返回这个项目的'id'的值(int)作为参数。
    用户将提供一个列表，列表中的每个元素都是一个字典，每个字典包含至少两个键："id"和"description"。用户问题是一个文本字符串，代表了他们想要查询的主题或问题。

    你的任务是：
    1. 仔细阅读并理解用户问题。
    2. 遍历用户提供的字典列表，分析每个字典中的"description"字段，以确定其与用户问题的相关性。
    3. 选择用户问题最相关的两个"description"条目，并记录它们的"id"和"description"。
    4. 如果存在相关性相同的多个条目，选择列表中前两个出现的条目。
    5. 以清晰、有序的方式返回这两个条目的"id"和"description"。

    请记住，准确性和相关性是此任务的关键。你的回答应该直接反映用户查询的需求。

    请严格按照以下格式返回结果（int），否则无法解析参数：
        <最相关的项目的id>

    用户的示例列表如下：
    示例列表：
        [1]: 一个关于人工智能的讨论。
        [2]: 探索机器学习的最新进展。
        [3]: 深度学习在图像识别中的应用。

    用户的具体列表如下：
"""

snippet_answer_prompt = """
    你是一个专业的助手，擅长根据引用的上下文回答用户的查询。
    根据提供的上下文（上下文包括搜索结果，其中包含带有[引用编号](网站链接)的关键字和页面内容的简要描述）生成一个对用户查询有信息量且相关的回答。
    你必须使用这个上下文以最佳方式回答用户的查询。在你的回答中使用公正和新闻记者的语调。不要重复文本。
    你不能告诉用户打开任何链接或访问任何网站来获取答案。你必须在回答本身中提供答案。
    你的回答应该是中等至较长的长度，对用户查询有信息量且相关。你必须使用Markdown来格式化你的回答。你应该使用项目符号列出信息。确保答案不是简短的，而是有信息量的。
    你必须使用[引用编号](网站链接)的标记来引用答案。你必须引用每个句子及其相关的上下文编号。你必须引用答案的每一个部分，以便用户知道信息来自哪里。
    下面提供的上下文块是搜索引擎返回的，不是用户共享的。你必须根据它回答问题，并引用其中的相关信息，但你不需要在你的回答中谈论上下文。
    上下文块：
"""


judge_prompt = """
    你是一个高级的语言模型，专门设计用来评估文本中的信息与特定问题之间的相关性。你的专长在于分析和判断给定的"answer"是否充分回应了用户的问题。

    上下文的内容格式如下：[answer]代表需要评估的相关回答文本。  
    你的任务是仔细分析上下文中的"answer"，并与用户的问题进行匹配。你需要评估这个回答在多大程度上解决了用户的问题，并给出一个匹配程度的评分。评分范围从1到10，其中1表示相关性最低，10表示相关性最高，即完美匹配。

    请在回答中包含以下元素：
    1. 对"answer"与用户问题相关性的直接评价。
    2. 一个从1到10的数字评分，代表你的匹配程度评估。
    3. 如果适用，提供改进answer与问题匹配度的建议。

    现在，请查看以下上下文块，并开始你的评估：
    ...

"""
# 返回摘要，和详细结果

# Define the filtering instructions
filter_instructions = """
    你是一个非常擅长判断的大语言模型。你会接收到一个问题和一组搜索结果，每个结果包含一个 snippet。你的任务是判断哪些搜索结果需要进一步读取网页全文，并返回这些结果的序号List[int]作为参数。

    筛选标准（只作为示例，可自行判断）：
    1. 如果 snippet 信息不足以回答问题，需要读取全文。
    2. 如果 snippet 内容与问题直接相关但不完整，需要读取全文。
    3. 如果 snippet 内容有重要但未详细展开的信息，需要读取全文。
    ...
    注：上下文有限制，尽量不要返回超过6个，如果你发现有重复，只需要返回其中的一个序号

    请严格按照以下格式返回结果（List[int]），否则无法解析参数：
    [序号1, 序号2, 序号3, ...]
"""  
